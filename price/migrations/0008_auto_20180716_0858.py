# Generated by Django 2.0.4 on 2018-07-16 08:58

from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    dependencies = [
        ('hospital', '0034_account_specialties'),
        ('device', '0019_auto_20180625_0916'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('price', '0007_discount_shared_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='RebatableItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('item_type', models.PositiveSmallIntegerField(choices=[(1, 'Eligible item'), (2, 'Rebated item')], default=1)),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(('app_label', 'device'), models.Q(('model', 'specialty'), ('model', 'category'), ('model', 'product'), _connector='OR')), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Rebate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Rebate program')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', django_fsm.FSMIntegerField(choices=[(1, 'New'), (2, 'Complete')], default=1)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Client')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('percent', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('discount_type', models.PositiveSmallIntegerField(choices=[(1, 'Discount by percent'), (2, 'Discount by Dollar Value')], default=1, verbose_name='Discount type')),
                ('tier_type', models.PositiveSmallIntegerField(choices=[(1, 'Spend'), (2, 'Marketshare'), (3, 'Purchased units'), (4, 'Used units')], default=1, verbose_name='Tier type')),
                ('lower_bound', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('upper_bound', models.DecimalField(decimal_places=2, max_digits=20)),
                ('rebate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='price.Rebate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='discount',
            name='marketshare',
        ),
        migrations.RemoveField(
            model_name='discount',
            name='spend',
        ),
        migrations.RemoveField(
            model_name='discount',
            name='units',
        ),
        migrations.AddField(
            model_name='rebatableitem',
            name='rebate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rebatable_items', to='price.Rebate'),
        ),
        migrations.AddField(
            model_name='discount',
            name='rebate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='price.Rebate'),
        ),
        migrations.AlterUniqueTogether(
            name='rebatableitem',
            unique_together={('content_type', 'object_id', 'rebate', 'item_type')},
        ),
    ]
