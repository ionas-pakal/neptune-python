version: 2
jobs:
  build:
    working_directory: ~/neptune
    docker:
      - image: circleci/python:3.6.6-node-browsers-legacy
      - image: circleci/postgres:10.3
        environment:
          POSTGRES_USER: neptune
          POSTGRES_DB: neptune
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/circleci.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/circleci.txt
            npm install
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/circleci.txt" }}
          paths:
            - "venv"
      - run:
          name: Frontend test
          command: |
            . venv/bin/activate
            npm run lint
            npm run test
            BABEL_ENV=test npm run build
            python manage.py test functional_tests.test_hospital_admin
      - run:
          name: Frontend test coverage report
          command: |
            npm run coverage:lcov
            npm run coverage:coveralls
            npm run coverage
      - run:
          name: Backend test
          command: |
            . venv/bin/activate
            flake8
            coverage run manage.py test
      - run:
          name: Backend test coverage report
          command: |
            . venv/bin/activate
            coverage html
            coveralls --merge=coverage/coveralls-frontend.json
            coverage report -m

      - store_artifacts:
          path: ./htmlcov
          destination: django-coverage
      - store_artifacts:
          path: ./coverage/lcov-report
          destination: frontend-coverage
  deploy:
    working_directory: ~/neptune
    docker:
      - image: circleci/python:3.6.5-node-browsers
    steps:
      - checkout

      - run:
          name: Installing deployment dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade

      - run:
          name: Set up AWS credentials for deployment
          command: |
            mkdir -p ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config

      - run:
          name: Deploying
          working_directory: ~/neptune
          command: eb deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - master
